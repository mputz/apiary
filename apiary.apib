FORMAT: 1A

# TR02
This enables the registration of containers in the harbour of Hamburg


# TR02 Root [/]
TR02 entry point.

This resource does not have any attributes. Instead it offers the initial API affordances in the form of the HTTP Link header and HAL links.

## Retrieve Entry Point [GET]

+ Response 200 (application/hal+json)
    + Headers

            Link: <http:/api.gistfox.com/>;rel="self",<http:/api.gistfox.com/gists>;rel="gists"

    + Body

            {
                "_links": {
                    "self": { "href": "/" },
                    "gists": { "href": "/gists?{since}", "templated": true }
                }
            }

## Container Collection [/container]
Alle Container from the logged in user

### Liste aller bisherigen Container [GET]
+ Response 200 (application/hal+json)


## Container [/container/{id}]
Einzelner Container
+ Parameter
    + id (required, number)

### Container [GET]
+ Response 200 (application/json)
        {
            'id': 1,
            'Container-Number': 'DAKU1234567',
            'Container-ISOCode' : '22G1'
            'Container-Empty': true,
            'Container-Oversized': false,
            'Container-GrossWeight': 1234,
            'Carrier-ReleaseNumber': 'Freistellref01',
            'DangerousGoodsIndicator': false,
            'CustomsIndicator': false
        }

## TransportCoordination Collection [/transport]
All transport coordinations from the logged in user

### Liste aller bisherigen Transporte [GET]
+ Response 200 (application/json)
    


## Liste eines Transportauftrages [/transport/{id}]
A single transport object
+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the transport to perform action with

### Transport [GET]
+ Response 200 (application/json)
        {
            
        }


# Group Notes
Notes related resources of the **Notes API**

## Notes Collection [/notes]
### List all Notes [GET]
+ Response 200 (application/json)

        [{
          "id": 1, "title": "Jogging in park"
        }, {
          "id": 2, "title": "Pick-up posters from post-office"
        }]

### Create a Note [POST]
+ Request (application/json)

        { "title": "Buy cheese and bread for breakfast." }

+ Response 201 (application/json)

        { "id": 3, "title": "Buy cheese and bread for breakfast." }

## Note [/notes/{id}]
A single Note object with all its details

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Note to perform action with. Has example value.

### Retrieve a Note [GET]
+ Response 200 (application/json)

    + Header

            X-My-Header: The Value

    + Body

            { "id": 2, "title": "Pick-up posters from post-office" }

### Remove a Note [DELETE]
+ Response 204
